{"version":3,"sources":["modules/LabeledInputfield.js","modules/Filter.js","modules/Contacts.js","modules/Inputform.js","modules/persons.js","modules/Notification.js","App.js","index.js"],"names":["LabeledInputfield","name","value","onChange","Filter","Contactline","person","handleDelete","number","onClick","id","Contacts","persons","searchtext","filter","toLowerCase","match","map","InputForm","handleSubmit","fields","onSubmit","field","handleChange","type","baseURL","restcommands","getAll","axios","get","then","response","data","create","newContact","post","deleteResource","delete","update","newItem","put","Notification","notification","color","undefined","notificationStyle","borderWidth","borderColor","style","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchtext","setNotification","notifyUser","setTimeout","warnUser","useEffect","personService","formFields","event","target","preventDefault","personFound","find","window","confirm","updatedPerson","returnedPerson","catch","newPerson","concat","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70195662.chunk.js","sourcesContent":["import React from 'react'\n\nconst LabeledInputfield = ({name, value, onChange}) => (\n    <div>\n      {name}: <input value={value} onChange={onChange} />\n    </div>\n  )\n\nexport default LabeledInputfield","import React from 'react'\nimport LabeledInputfield from './LabeledInputfield'\n\nconst Filter = ({ value, onChange }) => (\n    <LabeledInputfield name='Filter with'\n                        value={value}\n                        onChange={onChange} />\n  )\n\n  export default Filter","import React from 'react'\n\nconst Contacts = ({ persons, searchtext, handleDelete }) => (\n    <table>\n      <tbody>\n        {\n          persons.filter(person => person.name.toLowerCase().match(`.*${searchtext.toLowerCase()}.*`))\n            .map(person => <Contactline key={person.name} person={person} handleDelete={handleDelete} />)\n        }\n      </tbody>\n    </table>\n  )\n  \n  const Contactline = ({ person, handleDelete }) => (\n    <tr>\n      <td>{person.name}</td>\n      <td>{person.number}</td>\n      <td><button onClick={handleDelete(person.id, person.name)} >Remove</button></td>\n    </tr>\n  )\n\n  export default Contacts","import React from 'react'\nimport LabeledInputfield from './LabeledInputfield'\n\nconst InputForm = ({ handleSubmit, fields }) => (\n    <form onSubmit={handleSubmit}>\n      {\n        fields.map(field => (\n          <LabeledInputfield key={field.name} \n                              name={field.name} \n                              value={field.value} \n                              onChange={field.handleChange} />\n        ))\n      }\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n  \n  export default InputForm","import axios from \"axios\"\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => (\n    axios.get(baseURL).then(response => response.data)\n)\n\nconst create = newContact => (\n    axios.post(baseURL, newContact)\n        .then(response => response.data)\n)\n\nconst deleteResource = id => (\n    axios.delete(`${baseURL}/${id}`)\n        .then(response => response.data) \n)\n\nconst update = (newItem) => (\n    axios.put(`${baseURL}/${newItem.id}`, newItem)\n    .then(response => response.data)\n)\n\nconst restcommands = {\n    getAll,\n    create,\n    deleteResource,\n    update\n}\n\nexport default restcommands","import React from 'react'\n\nconst Notification = ({notification}) => {\n    if (notification === null) return <></>\n\n    const color = notification.color !== undefined ? notification.color : 'red'\n    const notificationStyle = {\n        color: color,\n        borderWidth: 'thick',\n        borderColor: color\n    }\n\n    return <div style={notificationStyle}>\n        <h2>{notification.message}</h2>\n    </div>\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './modules/Filter'\nimport Contacts from './modules/Contacts'\nimport InputForm from './modules/Inputform'\nimport personService from './modules/persons'\nimport Notification from './modules/Notification'\n\nconst App = () => {\n  \n  // States\n  const [persons, setPersons] = useState([])  \n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchtext, setSearchtext] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  // Function to set notification for user to see for 5 seconds\n  const notifyUser = (message) => {\n    setNotification({message, color: 'green'})\n    setTimeout(() => (setNotification(null)), 5000)\n  }\n\n  const warnUser = (message) => {\n    setNotification({message, color: 'red'})\n    setTimeout(() => (setNotification(null)), 5000)\n  }\n\n  // Getting contacts from the server\n  useEffect(() => {\n    personService.getAll()\n      .then(data => setPersons(data))\n  }, [])\n  \n  const handleNameInputChange = event => setNewName(event.target.value)\n  const handleNumberInputChange = event => setNewNumber(event.target.value)\n  const handleSearchtextChange = event => setSearchtext(event.target.value)\n\n  const formFields = [\n    { name: 'name', value: newName, handleChange: handleNameInputChange },\n    { name: 'number', value: newNumber, handleChange: handleNumberInputChange }\n  ]\n  \n  // Submitting new contact to the list\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    \n    // Check if person with same name already on the list\n    const personFound = persons.find(person => person.name === newName)\n    \n    // Already in the phonebook\n    if (personFound !== undefined) {\n      // Replace or not\n      const replace = window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)\n      if (replace) {\n        const updatedPerson = {...personFound, number: newNumber}\n        personService.update(updatedPerson)\n                      .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n                        notifyUser(`${returnedPerson.name} updated`)\n                      }).catch(data => {\n                        warnUser(`Could not update ${updatedPerson.name}`)\n                      })\n      } else {\n        // Cancelled\n        return\n      }\n    }\n    \n    // Not in the phonebook\n    if (personFound === undefined) {\n      //Adding the new person\n      const newPerson = {name: newName, number: newNumber}\n      personService.create(newPerson)\n        .then(returnedPerson => {   \n          setPersons(persons.concat(returnedPerson))\n          notifyUser(`${returnedPerson.name} added to the phonebook`)\n        })\n        .catch(error => {\n          warnUser(error.response.data.error)\n        })\n    }\n    \n    // Clear inputfields\n    setNewName('')\n    setNewNumber('')\n  }\n  \n  // Deleting a person\n  const removePerson = (id, name) => (\n    () => {\n      if (window.confirm(`Remove ${name} from contacts?`)) {\n        personService.deleteResource(id).then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          notifyUser(`${name} removed from the phonebook`)\n        })\n      }\n    }\n  )\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter value={searchtext} onChange={handleSearchtextChange} />\n      <h3>Add new</h3>\n      <InputForm handleSubmit={handleSubmit} fields={formFields} />\n      <h3>Numbers</h3>\n      <Contacts persons={persons} searchtext={searchtext} handleDelete={removePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}